version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: jobsift_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: jobsift_db
      POSTGRES_USER: jobsift_user
      POSTGRES_PASSWORD: jobsift_pass
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/01-init.sql
    networks:
      - jobsift_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jobsift_user -d jobsift_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: jobsift_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - jobsift_network
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: jobsift_backend
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://jobsift_user:jobsift_pass@db:5432/jobsift_db
      - SECRET_KEY=${SECRET_KEY:-your-super-secret-key-here-minimum-32-characters-long}
      - BACKEND_CORS_ORIGINS=["http://localhost:5173", "http://localhost:3000"]
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - backend_logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - jobsift_network
    command: >
      sh -c "
        alembic upgrade head &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: jobsift_frontend
    restart: unless-stopped
    environment:
      - VITE_API_BASE_URL=http://localhost:8000/api/v1
      - VITE_APP_NAME=JobSift
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    depends_on:
      - backend
    networks:
      - jobsift_network
    command: npm run dev
    stdin_open: true
    tty: true

  # Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: jobsift_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - nginx_logs:/var/log/nginx
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - jobsift_network
    profiles:
      - production

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: jobsift_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@jobsift.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      - jobsift_network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_logs:
    driver: local
  nginx_logs:
    driver: local
  pgadmin_data:
    driver: local
  frontend_node_modules:
    driver: local

networks:
  jobsift_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16